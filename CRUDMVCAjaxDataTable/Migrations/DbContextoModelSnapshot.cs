// <auto-generated />
using System;
using CRUDMVCAjaxDataTable.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRUDMVCAjaxDataTable.Migrations
{
    [DbContext(typeof(DbContexto))]
    partial class DbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRUDMVCAjaxDataTable.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("CountryNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = "US",
                            CountryNameEnglish = "United States of America"
                        },
                        new
                        {
                            CountryId = "CA",
                            CountryNameEnglish = "Canada"
                        });
                });

            modelBuilder.Entity("CRUDMVCAjaxDataTable.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CRUDMVCAjaxDataTable.Models.Region", b =>
                {
                    b.Property<string>("RegionId")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("RegionNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Region");

                    b.HasData(
                        new
                        {
                            RegionId = "CT",
                            CountryId = "US",
                            RegionNameEnglish = "Connecticut"
                        },
                        new
                        {
                            RegionId = "ME",
                            CountryId = "US",
                            RegionNameEnglish = "Maine"
                        },
                        new
                        {
                            RegionId = "MA",
                            CountryId = "US",
                            RegionNameEnglish = "Massachusetts"
                        },
                        new
                        {
                            RegionId = "NH",
                            CountryId = "US",
                            RegionNameEnglish = "New Hampshire"
                        },
                        new
                        {
                            RegionId = "RI",
                            CountryId = "US",
                            RegionNameEnglish = "Rhode Island"
                        },
                        new
                        {
                            RegionId = "VT",
                            CountryId = "US",
                            RegionNameEnglish = "Vermont"
                        },
                        new
                        {
                            RegionId = "NB",
                            CountryId = "CA",
                            RegionNameEnglish = "New Brunswick"
                        },
                        new
                        {
                            RegionId = "NF",
                            CountryId = "CA",
                            RegionNameEnglish = "Newfoundland"
                        },
                        new
                        {
                            RegionId = "NT",
                            CountryId = "CA",
                            RegionNameEnglish = "Northwest Territories"
                        },
                        new
                        {
                            RegionId = "NS",
                            CountryId = "CA",
                            RegionNameEnglish = "Nova Scotia"
                        },
                        new
                        {
                            RegionId = "NU",
                            CountryId = "CA",
                            RegionNameEnglish = "Nunavut"
                        },
                        new
                        {
                            RegionId = "ON",
                            CountryId = "CA",
                            RegionNameEnglish = "Ontario"
                        },
                        new
                        {
                            RegionId = "PE",
                            CountryId = "CA",
                            RegionNameEnglish = "Prince Edward Island"
                        },
                        new
                        {
                            RegionId = "QC",
                            CountryId = "CA",
                            RegionNameEnglish = "Québec"
                        },
                        new
                        {
                            RegionId = "SK",
                            CountryId = "CA",
                            RegionNameEnglish = "Saskatchewan"
                        },
                        new
                        {
                            RegionId = "YT",
                            CountryId = "CA",
                            RegionNameEnglish = "Yukon"
                        });
                });

            modelBuilder.Entity("CRUDMVCAjaxDataTable.Models.Region", b =>
                {
                    b.HasOne("CRUDMVCAjaxDataTable.Models.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
